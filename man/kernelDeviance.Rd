% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distanceFunctions.R
\name{kernelDeviance}
\alias{kernelDeviance}
\title{Kernel Density Deviance}
\usage{
kernelDeviance(dfv, column.nums = 1:ncol(dfv), bandwidth = seq(0.1, 1, 0.1),
  S = NULL, reportProgress = FALSE)
}
\arguments{
\item{dfv}{a data frame containing observations in rows and statistics in columns.}

\item{column.nums}{indexes the columns of the data frame that contain the statistics used to
calculate kernel log-likelihood (all other columns are ignored).}

\item{bandwidth}{a vector containing the range of bandwidths to be explored.}

\item{S}{the covariance matrix that the bandwidth is multiplied by. Leave as NULL to use the ordinary covariance matrix calculated on the data.}

\item{reportProgress}{whether to report current progress of the algorithm to the console (TRUE/FALSE).}
}
\description{
Calculates the Bayesian deviance (-2*log-likelihood) under the same kernel density model used
by kernelDist() for a range of bandwidths. Can be used to estimate the optimal
(maximum likelihood) bandwith to use in the kernelDist() function (see example).
}
\details{
Uses same input and model structure as kernelDist(). Calculates the log-likelihood using the
leave-one-out method, wherein the likelihood of each point is equal to its kernel
density calculated from every *other* point. This avoids the issue of obtaining infinite likelihood
at zero bandwidth, which would be the case under an ordinary kernel density model.
}
\examples{

# create a data frame of observations
df <- data.frame(x=rnorm(100),y=rnorm(100))

# create a vector of bandwidths to explore
lambda <- seq(0.1,2,0.1)

# obtain deviance at each of these bandwidths
deviance <- kernelDeviance(df,bandwidth=lambda,reportProgress=TRUE)

# find the maximum-likelihood (minimum-deviance) bandwidth
lambda_ML <- lambda[which.min(deviance)]

# use this value when calculating kernel density distances
distances <- kernelDist(df,bandwidth=lambda_ML)

}
\author{
Robert Verity \email{r.verity@imperial.ac.uk}
}

